```{r}
pacman::p_load(sf, sfdep, tmap, plotly, tidyverse)
```

# Importing the data

```{r}
hunan <- st_read(dsn = "data/geospatial", 
                 layer = "Hunan")
```

## Can see that it is decimal pair

```{r}
hunan2012 <- read_csv("data/aspatial/Hunan_2012.csv")
```

```{r}
hunan_GDPPC <- left_join(hunan,hunan2012)%>%
  select(1:4, 7, 15)
```

```{r}
tmap_mode("plot")
tm_shape(hunan_GDPPC) + tm_fill("GDPPC",
                                style="quantile",
                                palette = "Blues",
                                title="GDPPC") +
  tm_layout(main.title="Distribution of GDP per capita by county, Hunan province",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45,
            legend.width = 0.35,
            frame = TRUE)+
  tm_borders(alpha=0.5)+tm_compass(type="8star",size=2)+tm_scale_bar()+tm_grid(alpha=0.2)

```

## shortcut version of doing weight matrixs + row standardization default = queens

## shortcut of 9.4.1 and 9.4.2

```{r}
wm_q<-hunan_GDPPC %>% mutate(nb=st_contiguity(geometry), wt=st_weights(nb,style="W"),.before=1)
```

```{r}
moranI <-global_moran(wm_q$GDPPC,wm_q$nb, wm_q$wt)

```

# THIS IS WHAT PROF WANTS

```{r}
global_moran_test(wm_q$GDPPC,wm_q$nb, wm_q$wt)
```

## THis is actually what prof wants

```{r}
set.seed(1234)
global_moran_perm(wm_q$GDPPC,
                  wm_q$nb, 
                  wm_q$wt,
                  nsim=99)
```

## Space Time

```{r}
GDPPC <- read_csv("data/aspatial/Hunan_GDPPC.csv")
GDPPC_st <- spacetime(GDPPC, hunan,
                      .loc_col = "County",
                      .time_col = "Year")

```

```{r}
is_spacetime_cube(GDPPC_st)
```

# Computing Gi

## Deriving spatial weights

```{r}
GDPPC_nb <- GDPPC_st %>%
  activate("geometry") %>%
  mutate(nb = include_self(st_contiguity(geometry)),
         wt = st_inverse_distance(nb, geometry,
                                  scale = 1,
                                  alpha = 1),
         .before = 1) %>%
  set_nbs("nb") %>%
  set_wts("wt")
```

```{r}
gi_stars <- GDPPC_nb %>% 
  group_by(Year) %>% 
  mutate(gi_star = local_gstar_perm(
    GDPPC, nb, wt)) %>% 
  tidyr::unnest(gi_star)
```

### Mann-Kendall Test

```{r}
cbg <- gi_stars %>% 
  ungroup() %>% 
  filter(County == "Changsha") |> 
  select(County, Year, gi_star)

ggplot(data = cbg, 
       aes(x = Year, 
           y = gi_star)) +
  geom_line() +
  theme_light()
```

## Group by using country

```{r}
#| eval: false
cbg %>%
  summarise(mk = list(
    unclass(
      Kendall::MannKendall(gi_star)))) %>% 
  tidyr::unnest_wider(mk)

ehsa <- gi_stars %>%
  group_by(County) %>%
  summarise(mk = list(
    unclass(
      Kendall::MannKendall(gi_star)))) %>%
  tidyr::unnest_wider(mk)
```
